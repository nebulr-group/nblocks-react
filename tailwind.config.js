/** @type {import('tailwindcss').Config} */
colors = require("tailwindcss/colors");

module.exports = {
  content: ["./src/**/*.{js,jsx,ts,tsx}"],
  theme: {
    extend: {},
    spacing: {
      px: "var(--px-space)",
      0: "var(--space-0)",
      0.5: "var(--space-0-5)",
      1: "var(--space-1)",
      1.5: "var(--space-1-5)",
      2: "var(--space-2)",
      2.5: "var(--space-2-5)",
      3: "var(--space-3)",
      3.5: "var(--space-3-5)",
      4: "var(--space-4)",
      5: "var(--space-5)",
      6: "var(--space-6)",
      7: "var(--space-7)",
      8: "var(--space-8)",
      9: "var(--space-9)",
      10: "var(--space-10)",
      11: "var(--space-11)",
      12: "var(--space-12)",
      14: "var(--space-14)",
      16: "var(--space-16)",
      20: "var(--space-20)",
      28: "var(--space-28)",
      32: "var(--space-32)",
      40: "var(--space-40)",
      44: "var(--space-44)",
      48: "var(--space-48)",
      52: "var(--space-52)",
      56: "var(--space-56)",
      60: "var(--space-60)",
      64: "var(--space-64)",
      72: "var(--space-72)",
      80: "var(--space-80)",
      96: "var(--space-96)",
    },
    colors: {
      white: "rgb(var(--color-white) / <alpha-value>)",
      purple: {
        50: "rgb(var(--color-primary-50) / <alpha-value>)",
        100: "rgb(var(--color-primary-100) / <alpha-value>)",
        200: "rgb(var(--color-primary-200) / <alpha-value>)",
        300: "rgb(var(--color-primary-300) / <alpha-value>)",
        400: "rgb(var(--color-primary-400) / <alpha-value>)",
        500: "rgb(var(--color-primary-500) / <alpha-value>)",
        600: "rgb(var(--color-primary-600) / <alpha-value>)",
        700: "rgb(var(--color-primary-700) / <alpha-value>)",
        800: "rgb(var(--color-primary-800) / <alpha-value>)",
        900: "rgb(var(--color-primary-900) / <alpha-value>)",
      },
      gray: {
        50: "rgb(var(--color-tertiary-50) / <alpha-value>)",
        100: "rgb(var(--color-tertiary-100) / <alpha-value>)",
        200: "rgb(var(--color-tertiary-200) / <alpha-value>)",
        300: "rgb(var(--color-tertiary-300) / <alpha-value>)",
        400: "rgb(var(--color-tertiary-400) / <alpha-value>)",
        500: "rgb(var(--color-tertiary-500) / <alpha-value>)",
        600: "rgb(var(--color-tertiary-600) / <alpha-value>)",
        700: "rgb(var(--color-tertiary-700) / <alpha-value>)",
        800: "rgb(var(--color-tertiary-800) / <alpha-value>)",
        900: "rgb(var(--color-tertiary-900) / <alpha-value>)",
      },
      green: {
        50: "rgb(var(--color-success-50) / <alpha-value>)",
        100: "rgb(var(--color-success-100) / <alpha-value>)",
        200: "rgb(var(--color-success-200) / <alpha-value>)",
        300: "rgb(var(--color-success-300) / <alpha-value>)",
        400: "rgb(var(--color-success-400) / <alpha-value>)",
        500: "rgb(var(--color-success-500) / <alpha-value>)",
        600: "rgb(var(--color-success-600) / <alpha-value>)",
        700: "rgb(var(--color-success-700) / <alpha-value>)",
        800: "rgb(var(--color-success-800) / <alpha-value>)",
        900: "rgb(var(--color-success-900) / <alpha-value>)",
      },
      yellow: {
        50: "rgb(var(--color-warning-50) / <alpha-value>)",
        100: "rgb(var(--color-warning-100) / <alpha-value>)",
        200: "rgb(var(--color-warning-200) / <alpha-value>)",
        300: "rgb(var(--color-warning-300) / <alpha-value>)",
        400: "rgb(var(--color-warning-400) / <alpha-value>)",
        500: "rgb(var(--color-warning-500) / <alpha-value>)",
        600: "rgb(var(--color-warning-600) / <alpha-value>)",
        700: "rgb(var(--color-warning-700) / <alpha-value>)",
        800: "rgb(var(--color-warning-800) / <alpha-value>)",
        900: "rgb(var(--color-warning-900) / <alpha-value>)",
      },
      red: {
        50: "rgb(var(--color-danger-50) / <alpha-value>)",
        100: "rgb(var(--color-danger-100) / <alpha-value>)",
        200: "rgb(var(--color-danger-200) / <alpha-value>)",
        300: "rgb(var(--color-danger-300) / <alpha-value>)",
        400: "rgb(var(--color-danger-400) / <alpha-value>)",
        500: "rgb(var(--color-danger-500) / <alpha-value>)",
        600: "rgb(var(--color-danger-600) / <alpha-value>)",
        700: "rgb(var(--color-danger-700) / <alpha-value>)",
        800: "rgb(var(--color-danger-800) / <alpha-value>)",
        900: "rgb(var(--color-danger-900) / <alpha-value>)",
      },
      blue: {
        50: "rgb(var(--color-info-50) / <alpha-value>)",
        100: "rgb(var(--color-info-100) / <alpha-value>)",
        200: "rgb(var(--color-info-200) / <alpha-value>)",
        300: "rgb(var(--color-info-300) / <alpha-value>)",
        400: "rgb(var(--color-info-400) / <alpha-value>)",
        500: "rgb(var(--color-info-500) / <alpha-value>)",
        600: "rgb(var(--color-info-600) / <alpha-value>)",
        700: "rgb(var(--color-info-700) / <alpha-value>)",
        800: "rgb(var(--color-info-800) / <alpha-value>)",
        900: "rgb(var(--color-info-900) / <alpha-value>)",
      },
    },
  },
  plugins: [],
};
