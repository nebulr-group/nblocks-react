# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type App {
  azureAdSsoEnabled: Boolean
  googleSsoEnabled: Boolean
  id: String
  logo: String
  mfaEnabled: Boolean
  name: String
  onboardingFlow: String
  passkeysEnabled: Boolean
  privacyPolicyUrl: String
  termsOfServiceUrl: String
  uiUrl: String
  websiteUrl: String
}

input CreateTenantInput {
  logo: String
  name: String
  owner: TenantOwnerInput!
  plan: String
  priceOffer: PriceOfferInput
}

type Mutation {
  createTenantAnonymous(tenant: CreateTenantInput!): Tenant!

  """
  This will create a new user for a tenant.
  """
  createUsers(userNames: [String!]!): [User!]!
  deleteUser(userId: String!): Boolean!
  sendPasswordResetLink(userId: String!): Boolean!

  """
  Sets a single tenants payment details
  """
  setTenantPlanDetails(
    details: SetTenantPlanDetailsInput!
  ): TenantPaymentDetailsGraphql!

  """
  Update current user
  """
  updateMe(user: UserInput!): User!
  updateTenant(tenant: TenantInput!): Tenant!

  """
  Update the user. You can change role, teams and also enable or disable the user from logging in.
  """
  updateUser(user: UserInput!): User!
}

type PaymentOptionsGraphql {
  plans: [PlanGraphql!]
  taxes: [TaxGraphql!]
}

type PlanGraphql {
  createdAt: String
  description: String
  id: String!
  key: String!
  name: String!
  prices: [PriceGraphql!]!
  trial: Boolean!
  trialDays: Float!
}

type PriceGraphql {
  amount: Float!
  currency: String!
  recurrenceInterval: String!
}

input PriceOfferInput {
  currency: String!
  recurrenceInterval: String!
}

type Query {
  """
  Gets useful App configs for the UI to consume
  """
  getAppAnonymous: App!

  """
  Get current user
  """
  getMe: User!
  getPaymentOptionsAnonymous: PaymentOptionsGraphql!

  """
  Gets a single tenant
  """
  getTenant: Tenant!
  getTenantAnonymous: TenantAnonymous!

  """
  Gets a single tenants payment details
  """
  getTenantPaymentDetails: TenantPaymentDetailsGraphql!

  """
  List all available user roles that the current user can assign others
  """
  listUserRoles: [String!]!

  """
  List all users in this tenant.
  """
  listUsers: [User!]!
}

input SetTenantPlanDetailsInput {
  planKey: String!
  priceOffer: PriceOfferInput!
}

type TaxGraphql {
  countryCode: String!
  createdAt: String
  id: String!
  name: String!
  percentage: Float!
}

type Tenant {
  createdAt: String
  id: String!
  locale: String
  logo: String
  mfa: Boolean
  name: String
  onboarded: Boolean
  paymentStatus: TenantPaymentStatusGraphql
  plan: String
  trial: Boolean
}

type TenantAnonymous {
  id: String!
  locale: String
  name: String
}

input TenantInput {
  locale: String
  logo: String
  mfa: Boolean
  name: String
}

input TenantOwnerInput {
  email: String!
  firstName: String
  lastName: String
}

type TenantPaymentDetailsGraphql {
  details: TenantPlanDetailsGraphql!
  status: TenantPaymentStatusGraphql!
}

type TenantPaymentStatusGraphql {
  paymentsEnabled: Boolean!
  provider: String!
  shouldSelectPlan: Boolean!
  shouldSetupPayments: Boolean!
}

type TenantPlanDetailsGraphql {
  plan: PlanGraphql
  price: PriceGraphql
  trial: Boolean!
  trialDaysLeft: Float!
}

type User {
  consentsToPrivacyPolicy: Boolean
  createdAt: String
  email: String
  enabled: Boolean
  firstName: String
  fullName: String
  id: String!
  lastName: String
  lastSeen: String
  onboarded: Boolean
  role: String
  teams: [String!]
  username: String
}

input UserInput {
  enabled: Boolean
  id: String!
  role: String
}
